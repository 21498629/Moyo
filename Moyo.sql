IF EXISTS 
(SELECT NAME FROM SYS.DATABASES WHERE NAME = 'MOYO')
DROP DATABASE MOYO;

CREATE DATABASE MOYO

USE MOYO

-- VENDORS
CREATE TABLE VENDORS
(
	ID INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
	NAME VARCHAR (225) NOT NULL,
	EMAIL VARCHAR (225) NOT NULL,
	ADDRESS VARCHAR (225) NOT NULL,
	PHONE_NUMBER VARCHAR (10) NOT NULL,
	CreatedAt DATETIME DEFAULT GETDATE()
)

-- PRODUCT CATEORIES
CREATE TABLE PRODUCT_CATEGORIES
(
	ID INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
	NAME VARCHAR (225) NOT NULL,
	DESCRIPTION VARCHAR(MAX),
)

-- PRODUCTS
CREATE TABLE PRODUCTS
(
	ID INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
	NAME VARCHAR (225) NOT NULL,
	DESCRIPTION VARCHAR(225) NOT NULL,
	PRICE DECIMAL(5,2) NOT NULL,
	IMAGE VARCHAR (max),
	QUANTITY INT NOT NULL,
	IsActive BIT NOT NULL DEFAULT 0,
	VendorId INT NOT NULL REFERENCES VENDORS(ID),
	ProductCategoryId INT NOT NULL REFERENCES PRODUCT_CATEGORIES(ID)
)

-- ORDERS
CREATE TABLE ORDERS
(
	ID INT IDENTITY PRIMARY KEY NOT NULL,
	OrderNumber VARCHAR(50) UNIQUE NOT NULL,
	CreatedAt DATETIME DEFAULT GETDATE()
)

-- ORDER ITEMS
CREATE TABLE ORDER_ITEMS
(
	ID INT IDENTITY (1,1) PRIMARY KEY NOT NULL,
	OrderID INT NOT NULL REFERENCES ORDERS(ID),
	ProductID INT NOT NULL REFERENCES PRODUCTS(ID),
	QUANTITY INT NOT NULL DEFAULT 1
)

-- ROLES TABLE (AspNetRoles equivalent)
CREATE TABLE AspNetRoles
(
    Id INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
    Name NVARCHAR(256) NULL,
    NormalizedName NVARCHAR(256) NULL,
    ConcurrencyStamp NVARCHAR(MAX) NULL
);

-- USERS TABLE (AspNetUsers equivalent)
CREATE TABLE AspNetUsers
(
    Id INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
    Name VARCHAR(225) NOT NULL,
    Surname VARCHAR(225) NOT NULL,
    UserName NVARCHAR(256) NOT NULL,
    NormalizedUserName NVARCHAR(256) NULL,
    Email NVARCHAR(256) NOT NULL,
    NormalizedEmail NVARCHAR(256) NULL,
    EmailConfirmed BIT NOT NULL DEFAULT 0,
    PasswordHash NVARCHAR(MAX) NULL,
    SecurityStamp NVARCHAR(MAX) NULL,
    ConcurrencyStamp NVARCHAR(MAX) NULL,
    PhoneNumber NVARCHAR(10) NOT NULL,
    PhoneNumberConfirmed BIT NOT NULL DEFAULT 0,
    TwoFactorEnabled BIT NOT NULL DEFAULT 0,
    LockoutEnd DATETIMEOFFSET NULL,
    LockoutEnabled BIT NOT NULL DEFAULT 0,
    AccessFailedCount INT NOT NULL DEFAULT 0,
    Address VARCHAR(225) NOT NULL,
    CreatedAt DATETIME DEFAULT GETDATE()
);

-- USER_ROLES (junction table for many-to-many relationship)
CREATE TABLE AspNetUserRoles
(
    UserId INT NOT NULL,
    RoleId INT NOT NULL,
    CONSTRAINT PK_AspNetUserRoles PRIMARY KEY (UserId, RoleId),
    CONSTRAINT FK_AspNetUserRoles_AspNetUsers_UserId FOREIGN KEY (UserId) REFERENCES AspNetUsers(Id) ON DELETE CASCADE,
    CONSTRAINT FK_AspNetUserRoles_AspNetRoles_RoleId FOREIGN KEY (RoleId) REFERENCES AspNetRoles(Id) ON DELETE CASCADE
);

-- USER_CLAIMS (AspNetUserClaims equivalent)
CREATE TABLE AspNetUserClaims
(
    Id INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
    UserId INT NOT NULL,
    ClaimType NVARCHAR(MAX) NULL,
    ClaimValue NVARCHAR(MAX) NULL,
    CONSTRAINT FK_AspNetUserClaims_AspNetUsers_UserId FOREIGN KEY (UserId) REFERENCES AspNetUsers(Id) ON DELETE CASCADE
);

-- ROLE_CLAIMS (AspNetRoleClaims equivalent)
CREATE TABLE AspNetRoleClaims
(
    Id INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
    RoleId INT NOT NULL,
    ClaimType NVARCHAR(MAX) NULL,
    ClaimValue NVARCHAR(MAX) NULL,
    CONSTRAINT FK_AspNetRoleClaims_AspNetRoles_RoleId FOREIGN KEY (RoleId) REFERENCES AspNetRoles(Id) ON DELETE CASCADE
);

-- USER_LOGINS (AspNetUserLogins equivalent)
CREATE TABLE AspNetUserLogins
(
    LoginProvider NVARCHAR(128) NOT NULL,
    ProviderKey NVARCHAR(128) NOT NULL,
    ProviderDisplayName NVARCHAR(MAX) NULL,
    UserId INT NOT NULL,
    CONSTRAINT PK_AspNetUserLogins PRIMARY KEY (LoginProvider, ProviderKey, UserId),
    CONSTRAINT FK_AspNetUserLogins_AspNetUsers_UserId FOREIGN KEY (UserId) REFERENCES AspNetUsers(Id) ON DELETE CASCADE
);

-- USER_TOKENS (AspNetUserTokens equivalent)
CREATE TABLE AspNetUserTokens
(
    UserId INT NOT NULL,
    LoginProvider NVARCHAR(128) NOT NULL,
    Name NVARCHAR(128) NOT NULL,
    Value NVARCHAR(MAX) NULL,
    CONSTRAINT PK_AspNetUserTokens PRIMARY KEY (UserId, LoginProvider, Name),
    CONSTRAINT FK_AspNetUserTokens_AspNetUsers_UserId FOREIGN KEY (UserId) REFERENCES AspNetUsers(Id) ON DELETE CASCADE
);


-- ADDING CATEGORY AND VENDOR RECORDS

INSERT INTO VENDORS
	VALUES
		( 'Pepsi', 'admin@pepsi.com', '123 Centurion', '0214359876', GETDATE()),
		( 'Johnson&Johnson', 'admin@johnson.com', '123 Midrand', '0214359876', GETDATE()),
		( 'Nestle', 'admin@nestle.com', '123 Petoria', '0214359876', GETDATE());

INSERT INTO PRODUCT_CATEGORIES
	VALUES
		( 'Soft drinks', 'Flavoured carbonated drinks'),
		( 'Confectionery', 'Sweets and chocolates'),
		( 'Pantry', 'Cooking essentials');



SELECT * FROM VENDORS
SELECT * FROM PRODUCT_CATEGORIES
SELECT * FROM AspNetRoles
SELECT * FROM ORDER_ITEMS
SELECT * FROM ORDERS
SELECT * FROM PRODUCTS


INSERT INTO ORDER_ITEMS VALUES
( '3', '1', '2')

INSERT INTO ORDERS VALUES
( '1', GETDATE())





